name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21
          cache: false

      - name: Find changed Go files
        id: changed-files
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            # For push events, compare the previous commit with the current one
            base_commit="${{ github.event.before }}"
            head_commit="${{ github.sha }}"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # For pull requests, compare the base branch commit with the head branch commit
            base_commit="${{ github.event.before }}"
            head_commit="${{ github.sha }}"
          fi

          changed_files=$(git diff --name-only $base_commit $head_commit | grep '\.go$')
          echo "Changed Go files: $changed_files"
          echo "::set-output name=changed_files::$changed_files"

      - name: Cache Go Vendor Directory
        uses: actions/cache@v3
        id: vendor-cache
        with:
          path: vendor
          key: go-vendor-${{ runner.os }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-vendor-${{ runner.os }}-

      - name: Install Dependencies (if cache is missing)
        if: steps.vendor-cache.outputs.cache-hit != 'true'
        run: |
          go mod tidy
          go mod vendor
          go mod verify

      - name: Run generate
        run: go generate ./...

      - name: Run static analysis on changed files
        if: ${{ steps.changed-files.outputs.changed_files != '' }}
        run: go vet ${{ steps.changed-files.outputs.changed_files }}

      - name: Run golangci-lint on changed files
        if: ${{ steps.changed-files.outputs.changed_files != '' }}
        run: go run github.com/golangci/golangci-lint/cmd/golangci-lint run ${{ steps.changed-files.outputs.changed_files }} --timeout=5m

      - name: Run tests
        run: go test ./...